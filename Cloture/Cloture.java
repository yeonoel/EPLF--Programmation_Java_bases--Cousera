import java.util.ArrayList;

class Cloture {
    public static void main(String[] args) {
        int[][] carte = {
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,0,0},
            {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0},
            {0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,0},
            {0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,0,0,0,0},
            {0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0},
            {0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0},
            {0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0},
            {0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0},
            {0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0},
            {0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        };

        /*******************************************
         * Completez le programme Ã  partir d'ici.
         *******************************************/
        for (int i = 0; i < carte.length; ++i ) {
        	for (int j = 0; j < carte[i].length; ++j ) {
            	if (carte[i][j] != 0 && carte[i][j] != 1) {
            		System.out.print("Votre carte du terrain n'a pas le bon format :\nvaleur '");
            		System.out.print(carte[i][j]);
            		System.out.print("' trouveé en position [");
            		System.out.print(i);
            		System.out.print("][");
            		System.out.print(j);
            		System.out.println("]");
            		return;
            	}
            }
        }
        
        for (int i = 0; i < carte.length; ++i) {
            for (int j = 0; j < carte[i].length; ++j) {
                if (carte[i][j] == 0) {
                    // Chercher la séquence de zéros
                    int indexGauche = j;
                    int indexDroite = j;
                    
                    // Chercher l'index de gauche
                    while (indexGauche > 0 && carte[i][indexGauche - 1] == 0) {
                        indexGauche--;
                    }
                    // Chercher l'index de droite
                    while (indexDroite < carte[i].length - 1 && carte[i][indexDroite + 1] == 0) {
                        indexDroite++;
                    }
                    // Vérifier si la séquence est entourée de uns
                    if (indexGauche > 0 && indexDroite < carte[i].length - 1
                            && carte[i][indexGauche - 1] == 1 && carte[i][indexDroite + 1] == 1) {
                        // Remplacer la séquence de zéros par des uns
                        for (int k = indexGauche; k <= indexDroite; k++) {
                            carte[i][k] = 1;
                        }
                    }
                }
            }
        }
        double perimeter = 0.0;  // Initialisation du périmètre total

        for (int i = 0; i < carte.length; ++i) {
            for (int j = 0; j < carte[i].length; ++j) {
                if (carte[i][j] == 1) {
                    // Vérifier les bords de la case 1 au nord, au sud, à l'est et à l'ouest
                    if (i - 1 < 0) {
                    	perimeter += 2.5;
                    }
                    if (i + 1 > carte.length - 1) {
                    	perimeter += 2.5;
                    }
                    if (j - 1 < 0) {
                    	perimeter += 2.5;
                    }
                    if (j + 1 > carte[i].length - 1) {
                    	perimeter += 2.5;
                    }
                    
                    if (i - 1 >= 0 && carte[i - 1][j] == 0) {
                        perimeter += 2.5;
                    }
                    if (i + 1 < carte.length && carte[i + 1][j] == 0) {
                        perimeter += 2.5;
                    }
                    if (j - 1 >= 0 && carte[i][j - 1] == 0) {
                        perimeter += 2.5;
                    }
                    if (j + 1 < carte[i].length && carte[i][j + 1] == 0) {
                        perimeter += 2.5;
                    }
                }
            }
        }
        System.out.print("Il vous faut ");
        System.out.print(perimeter);
        System.out.println(" mètres de clôture pour votre terrain.");
        

        
        

        /*******************************************
         * Ne rien modifier aprÃ¨s cette ligne.
         *******************************************/
    }
}